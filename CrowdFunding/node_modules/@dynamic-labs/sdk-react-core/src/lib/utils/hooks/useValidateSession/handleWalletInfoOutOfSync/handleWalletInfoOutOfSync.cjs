'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../../../../../_virtual/_tslib.cjs');
var user = require('../../../../store/state/user/user.cjs');
require('@dynamic-labs/utils');
require('../../../constants/values.cjs');
require('@dynamic-labs/sdk-api-core');
require('../../../../store/state/projectSettings/projectSettings.cjs');
var primaryWalletId = require('../../../../store/state/primaryWalletId/primaryWalletId.cjs');
var connectedWalletsInfo = require('../../../../store/state/connectedWalletsInfo/connectedWalletsInfo.cjs');

/**
 * Detects mismatch between wallet info.
 * If there is primary wallet id, but no user or connected wallets info,
 * it means it's in a bad state and we should log out.
 */
const handleWalletInfoOutOfSync = (_a) => _tslib.__awaiter(void 0, [_a], void 0, function* ({ logout, }) {
    const primaryWalletId$1 = primaryWalletId.getPrimaryWalletId();
    if (!primaryWalletId$1) {
        return;
    }
    const user$1 = user.getUser();
    const connectedWallets = connectedWalletsInfo.getConnectedWalletsInfo();
    if (user$1 || connectedWallets.length > 0) {
        return;
    }
    yield logout('wallet info is out of sync', {
        connectedWallets,
        primaryWalletId: primaryWalletId$1,
        user: user$1,
    });
});

exports.handleWalletInfoOutOfSync = handleWalletInfoOutOfSync;
