'use client'
'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _tslib = require('../../../../../../_virtual/_tslib.cjs');
var utils = require('@dynamic-labs/utils');
var user$1 = require('../../../../data/api/user/user.cjs');
var user = require('../../../../store/state/user/user.cjs');
require('../../../constants/values.cjs');
var isCookieEnabled = require('../../../functions/isCookieEnabled/isCookieEnabled.cjs');
require('../../../../store/state/projectSettings/projectSettings.cjs');
var getAuthToken = require('../../../functions/getAuthToken/getAuthToken.cjs');

/**
 * Detects mismatch between user and auth token.
 */
const handleUserDataOutOfSync = (_a) => _tslib.__awaiter(void 0, [_a], void 0, function* ({ environmentId, logout, projectSettings, }) {
    const cookieEnabled = isCookieEnabled.isCookieEnabled(projectSettings);
    const authToken = getAuthToken.getAuthToken();
    const user$2 = user.getUser();
    if (authToken || !user$2) {
        return;
    }
    if (user$2 && !authToken && cookieEnabled) {
        try {
            yield user$1.getAuthenticatedUser({ environmentId });
        }
        catch (e) {
            if (e instanceof utils.CookieInvalidError) {
                yield logout('user auth cookie invalid', {
                    authToken,
                    user: user$2,
                });
                return;
            }
        }
        return;
    }
    yield logout('user data out of sync', {
        authToken,
        user: user$2,
    });
});

exports.handleUserDataOutOfSync = handleUserDataOutOfSync;
