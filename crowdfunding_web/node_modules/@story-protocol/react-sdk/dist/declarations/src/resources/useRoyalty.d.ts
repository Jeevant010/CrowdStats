import { CollectRoyaltyTokensRequest, CollectRoyaltyTokensResponse, PayRoyaltyOnBehalfRequest, PayRoyaltyOnBehalfResponse, ClaimableRevenueRequest, ClaimRevenueRequest, ClaimRevenueResponse, SnapshotRequest, SnapshotResponse } from "@story-protocol/core-sdk";
declare const useRoyalty: () => {
    loadings: Record<string, boolean>;
    errors: Record<string, string | null>;
    collectRoyaltyTokens: (request: CollectRoyaltyTokensRequest) => Promise<CollectRoyaltyTokensResponse>;
    payRoyaltyOnBehalf: (request: PayRoyaltyOnBehalfRequest) => Promise<PayRoyaltyOnBehalfResponse>;
    claimableRevenue: (request: ClaimableRevenueRequest) => Promise<bigint>;
    claimRevenue: (request: ClaimRevenueRequest) => Promise<ClaimRevenueResponse>;
    snapshot: (request: SnapshotRequest) => Promise<SnapshotResponse>;
    getRoyaltyVaultAddress: (request: `0x${string}`) => Promise<`0x${string}`>;
};
export default useRoyalty;
//# sourceMappingURL=useRoyalty.d.ts.map